* 만들면서 배우는 리스프 프로그래밍
*** 머리말
**** 어떤 점이 리스프를 그토록 멋지고 특이하게 만드는가?
리스프는 *표현 기능이 대단히 뛰어난* 언어
- 가장 복잡한 프로그래밍 아이디어를 명확하고 적절하게 표현할 수 있도록 설계
**** 리스프가 그렇게 좋다면 왜 더 많은 사람이 쓰지 않을까?
**** 리스프는 어디에서 왔는가?
실용성/사용성에 초점을 마준 다른 언어로부터 진화한 것이 아니었다
- 혈통이 완전히 달랐고, 수학에서 직접 구현되었다
- 대신 프로그래밍 표기법, 언어의 의미, 심플성에 대한 질문을 던진 언어
**** 리스프의 힘은 어디에서 왔는가?
표현력이 있는 언어란 아주 약간의 코드만으로 많은 작업을 할 수 있음을 뜻함
- 언어에 기능이 많아야 한다 (라이브러리)
- 언어의 내부를 파헤칠 수 있어야 한다 (언어를 뜯어고친다)
  - 리스프 안에서 리스프를 스스로 작성하는 것이 간단하다
** 리스프는 힘이다
*** 리스프 시작하기
CLISP는 안시커먼리스프 규약을 준수해 개발하였다
**** 리스프 변종
리스프의 주된 원리를 따르는 모든 언어는 리스프의 변종이라 일컫는다
***** 두 리스프 이야기
***** 앞날이 기대되는 리스프
***** 스크립트 언어로 쓰이는 리스프
***** 안시 커먼 리스프
**** CLISP로 시작하기
***** CLISP 설치하기
***** CLISP 실행하기
**** 이 장에서 배운 것
- 리스프에는 두가지 (주요) 변종이 있는데, 커먼리스프와 스킴이다
- 커먼 리스프는 다양한 프로그래밍 방식을 지원하는 다중 패러다임 언어이다
- CLISP는 커먼리스프를 구현한 것이다
*** 첫 리스프 프로그램 만들기
**** 내 숫자를 맞춰봐! 게임
**** 리스프에서 전역변수 선언하기
***** big 과 small 변수 선언하기
리스프에서 전역으로 선언된 변수를 최상위 정의(top-level definition)이라 부른다
~defparameter~ 함수를 이용해 최상위 정의를(전역변수) 할 수 있다
- 이 함수는 parameter와 아무 관계 없다
- 첫번째 매개변수에는 새로운 변수이름을 넣는다
***** 전역변수를 정의하는 다른 함수
**** 리스프의 기본 수칙
**** 리스프에서 전역함수 정의하기
***** guess-my-number 함수 정의하기
***** smaller와 bigger 함수 정의하기
***** start-over 함수 정의하기
**** 리스프에서 지역변수 정의하기
**** 이 장에서 배운 것
- 전역변수를 선언하려면 defparameter 명령을 사용한다
- 전역함수를 선언하려면 defun 명령을 사용한다
- 지역변수와 지역함수를 선언하려면 각각 let과 flet 명령을 사용한다
- labels 함수는 flet 과 비슷하나 함수 자신을 호출할 수 있게 한다. 자기 자신을 호출하는 함수를 재귀함수라고 부른다
*** 리스프 문법으로의 여행
**** 문법과 의미
**** 리스프 문법의 기초
***** 심볼
***** 숫자
***** 문자열
**** 리스프는 코드와 데이터를 어떻게 구분하는가?
***** 코드 모드
***** 데이터 모드
**** 리스트
***** 콘셀
***** 리스트 함수
***** 중첩 리스트
**** 이 장에서 배운 것
** 리스프는 대칭이다
*** 조건에 따라 결정하기
*** 텍스트 게임 엔진 만들기
