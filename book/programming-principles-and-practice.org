#+title: Programming Principles And Practice

* PROGRAMMING Principles and Practice Using C++
** 들어가며
프로그래밍은 주어진 문제의 해법을 컴퓨터가 실행할 수 있는 형태로 표현하는 기술이다
프로그래밍에서 가장 공들여야 할 부분이 바로 그 해답을 찾고 가다듬는 일이며,
이 해답을 프로그래밍하는 과정에서 문제를 더 명확히 이해할 수 있다

컴퓨터가 여러분이 원하는 일을 수행할 수 있게 아이디어를 코드(code)로 표현하는 능력
** 독자에게 전하는 글
*** 이 책의 구성
**** 전체적인 접근 방법
**** 실습문제와 연습문제
**** 이 책을 학습한 후
이 책으로 기초 과정을 마친 후에 할 만한 가장 좋은 일은 다른 사람이 사용할 수 있는 코드를 개발하는 *실제 프로젝트* 에 참여하는 일이다
- 프로젝트를 마치거나 프로젝트 중에 프로그래밍 언어에 대한 전문적인 수준의 교과서 또는 프로젝트에 필요한 특화된 내용을 다루는 책 등을 학습하면 좋다

  프로그래머를 본업으로 하지 않더라도 두 가지 이상의 언어를 알지 못하면 소프트웨어 분야에서 전문가가 될 수 없다
*** 나의 교육 철학
**** 주제별 순서
**** 프로그래밍과 프로그래밍 언어
**** 이식성
*** 프로그래밍과 컴퓨터 과학
*** 창의성과 문제해결
*** 독자 의견
*** 참고자료
** 컴퓨터, 사람, 프로그래밍
*** 소개
*** 소프트웨어
*** 사람
*** 컴퓨터 과학
*** 컴퓨터의 광범위한 쓰임새
**** 화면의 유무
**** 선박
**** 원격 통신
**** 의료
**** 정보
**** 수직적인 관점
**** 결론은?
*** 프로그래머의 이상
** Hello, World!
*** 프로그램
*** 고전적인 첫 번째 프로그램
*** 컴파일 과정
*** 링크 과정
*** 프로그래밍 환경
** 객체, 타입, 값
*** 입력
*** 변수
*** 입력과 타입
*** 연산과 연산자
*** 대입과 초기화
**** 예제: 반복되는 단어 찾기
*** 복합 대입 연산자
**** 예제: 반복되는 단어 찾기
*** 이름
*** 타입과 객체
*** 타입 안정성
**** 안전한 타입 변환
**** 안전하지 않은 타입 변환
