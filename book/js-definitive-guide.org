#+title: Js Definitive Guide

* 자바스크립트 완벽 가이드
*** 서문
이 책의 목표는 자바스크립트 언어를 포괄적이고 완벽하게 문서화하고, 자바스크립트 프로그램에서 사용할 수 있는 클라이언트 및 서버사이드 API를 자세히 소개하는 것입니다

책을 읽다가 코어 자바스크립트 또는 클라이언트 사이드 자바스크립트에 대해 찾아보고 싶다면 MDN 웹사이트를 추천합니다
서버 사이드 노드 API에 궁금한 것이 있다면 노드 참조 문서를 추천합니다
** 자바스크립트 소개
자바스크립트는 웹의 프로그래밍 언어입니다

ECMAScript 명세는 ES6을 마지막으로, 버전번호 대신 년도를 사용하기로 결정했습니다
(e.g. ES2016, ES2017, ES2018 ...)

하위 호환성 유지 문제 때문에 제거할 수 없는 구식 기능이 있습니다
- ES5 이후 버전에서는 초기 버전의 실수를 대부분 해결한 스트릭트 모드를 사용할 수 있습니다
- ES6 이후에는 새로운 기능을 사용할 때 묵시적으로 스트릭트 모드에 진입하는 경우가 잦습니다
  (e.g. class 키워드[클래스 내부 코드], ES6 모듈[모듈 내부 코드])

자바스크립트 코어에는 입출력에 관한 부분은 정의되어 있지 않습니다
- 입출력, 네트워크, 스토리지, 그래픽 같은 기능은 자바스크립트가 임베드된 '호스트 환경'이 담당합니다
  - 웹브라우저 환경: 사용자의 마우스와 키보드 입력을 받고 HTTP 요청을 보내고 HTML과 CSS 표시
  - 노드: 운영체제 전체에 접근해 파일을 읽고 쓰고, 네트워크를 통해 데이터 송수신, HTTP 요청을 보내고 받기

이 장은 소개 목적이므로 이어질 장을 이해하는 데 필수적인 핵심 기능을 간단히 훑어 나가기만 합니다
*** 자바스크립트 탐험
*** Hello World
*** 자바스크립트 여행
객체는 문자열과 값의 연결입니다
- 객체의 프로퍼티는 . 또는 []로 접근합니다
- 할당을 통해 프로퍼티를 새로 만들 수 있습니다


자바스크립트는 배열, 즉 *숫자로 인덱스된* 리스트도 지원합니다


자바스크립트에서 표현식이란 어떤 값으로 평가(evaluate)되는 구절입니다


표현식은 값을 계산할 뿐 프로그램의 상태를 바꾸지 않습니다
문은 값을 갖지 않지만 프로그램의 상태를 바꿉니다
- 변수 이름 역시 표현식입니다


함수(function)는 한 번 정의하면 몇 번이고 호출할 수 있는, 이름이 있고 매개변수를 받을 수 있는 자바스크립트 코드 블록입니다


객체와 함께 사용하는 함수를 *메서드*라고 부릅니다
- 객체 프로퍼티로 할당된 함수를 메서드라고 부릅니다
- 자바스크립트의 객체는 모두 (배열도 포함하여 ) 메서드를 갖습니다


"this" 키워드는 메서드를 정의하는 대상 객체입니다
*** 예제: 글자 빈도 히스토그램
*** 요약
** 어휘구조
어휘구조는 그 언어로 프로그램을 작성할 때 지켜야 할 기본적인 규칙의 집합입니다
- 대소문자 구분, 스페이스, 줄바꿈
- 주석
- 리터럴
- 식별자와 예약어
- 유니코드
- (선택사항)세미콜론
*** 자바스크립트 프로그램의 텍스트
*** 주석
*** 리터럴
*** 식별자와 예약어
*** 유니코드
*** 선택사항인 세미콜론
*** 요약
** 타입, 값, 변수
*** 개요와 정의
*** 숫자
*** 텍스트
*** 불 값
*** null과 undefined
*** 심벌
*** 전역 객체
*** 불변인 기본 값과 가변인 객체 참조
*** 타입 변환
*** 변수 선언과 할당
*** 요약
** 표현식과 연산자
*** 기본 표현식
*** 객체와 배열 초기화 표현식
*** 함수 정의 표현식
*** 프로퍼티 접근 표현식
*** 호출 표현식
*** 객체 생성 표현식
*** 연산자 개요
*** 산술 표현식
*** 관계 표현식
*** 논리 표현식
*** 할당 표현식
*** 평가 표현식
*** 기타 연산자
*** 요약
** 문
*** 표현문
*** 복합문과 빈 문
*** 조건문
*** 반복문
*** 점프 문
*** 기타 문
*** 선언
*** 자바스크립트 문 요약
** 객체
*** 객체 소개
*** 객체 생성
*** 프로퍼티 검색과 설정
*** 프로퍼티 삭제
*** 프로퍼티 테스트
*** 프로퍼티 열거
*** 객체 확장
*** 객체 직렬화
*** 객체 메서드
*** 확장된 객체 리터럴 문법
*** 요약
** 배열
*** 배열 생성
*** 배열 요소 읽기와 쓰기
*** 성긴 배열
*** 배열 길이
*** 배열 요소 추가와 삭제
*** 배열 순회
*** 다차원 배열
*** 배열 메서드
*** 배열 비슷한 객체
*** 배열인 문자열
*** 요약
** 함수
*** 함수 정의
*** 함수 호출
*** 함수 매개변수
*** 값인 함수
*** 네임스페이스인 함수
*** 클로저
*** 함수 프로퍼티, 메서드, 생성자
*** 함수형 프로그래밍
*** 요약
** 클래스
*** 클래스와 프로토타입
*** 클래스와 생성자
*** class 키워드를 사용하는 클래스
*** 기존 클래스에 메서드 추가
*** 서브클래스
*** 요약
** 모듈
*** 클래스, 객체, 클로저를 사용하는 모듈
*** 노드모듈
*** ES6 모듈
*** 요약
** 자바스크립트 표준 라이브러리
*** 세트와 맵
*** 형식화 배열과 이진 데이터
*** 정규 표현식과 패턴 매칭
*** 날짜와 시간
*** Error 클래스
*** JSON 직렬화와 분석
*** 국제화 API
*** 콘솔 API
*** URL API
*** 타이머
*** 요약
** 이터레이터와 제너레이터
*** 이터레이터의 동작방법
*** 이터러블 객체 만들기
*** 제너레이터
*** 고급 제너레이터 기능
*** 요약
** 비동기 자바스크립트
*** 콜백과 비동기 프로그래밍
*** 프라미스
*** async와 await
*** 비동기 순회
*** 요약
** 메타프로그래밍
*** 프로퍼티 속성
*** 객체 확장성
*** 프로토타입 속성
*** 잘 알려진 심벌
*** 템플릿 태그
*** 리플렉트 API
*** 프록시 객체
*** 요약
** 웹 브라우저의 자바 스크립트
*** 웹 프로그래밍 기본
*** 이벤트
*** 문서 스크립트
*** CSS 스크립트
*** 문서 지오메트리와 스크롤
*** 웹 컴포넌트
*** SVG
*** <canvas>의 그래픽
*** 오디오 API
*** 위치, 내비게이션, 히스토리
*** 네트워크
*** 스토리지
*** 워커 스레드와 메시지
*** 만델브로트 세트
*** 요약 및 추천문서
** 노드와 서버 사이드 자바스크립트
*** 노드 프로그래밍 기본
*** 노드는 기본적으로 비동기적입니다
*** 버퍼
*** 이벤트와 이벤트이미터
*** 스트림
*** 프로세스, CPU, 운영체제 세부사항
*** 파일 작업
*** HTTP 클라이언트와 서버
*** HTTP를 사용하지 않는 네트워크 서버와 클라이언트
*** 자식 프로세스
*** 워커 스레드
*** 요약
** 자바스크립트 도구와 확장
*** ES린트를 이용한 린팅
*** 프리티어를 사용한 자바스크립트 포맷
*** 제스트를 통한 단위 테스트
*** npm을 통한 패키지 관리
*** 코드 번들링
*** 바벨을 이용한 트랜스파일
*** JSX: 자바스크립트의 마크업 표현식
*** 플로를 이용한 타입체크
*** 요약
